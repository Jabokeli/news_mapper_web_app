"""
Django settings for news_mapper_web_app project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
# from distutils.command.config import config
##

import django_heroku
# import debug_toolbar
import dj_database_url



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# from django.conf.global_settings import AUTHENTICATION_BACKENDS
# from django.conf.global_settings import STATICFILES_DIRS

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('NEWS_MAPPER_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True
# DEBUG = False



INTERNAL_IPS = ['127.0.0.1']


# AUTHENTICATION_BACKENDS = (
#     'django.contrib.auth.backends.ModelBackend',
#     'news_mapper_web.backends.MyAuthBackend',
# )

# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'news_mapper_web',
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
]

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ROOT_URLCONF = 'news_mapper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        # # 'DIRS': ['templates'],
        # 'DIRS': [
        #     os.path.join(BASE_DIR, 'news_mapper_web/templates'),
        #     'app/news_mapper_web/media/documents'
        # ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': DEBUG,
        },
    },
]

WSGI_APPLICATION = 'news_mapper.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'geodjango_db',
        'USER': 'geo_db_user',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#      }
# }

#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'news_mapper_db',
#         'USER': 'news_mapper_user',
#         'PASSWORD': 'sqlAdmin1234!',
#         'HOST': 'localhost',
#         'PORT': 5432,
#     }
# }

# DATABASES = {}

# DATABASES['default'] = dj_database_url.config(default="postgres://cxvqfbfscxwues:20ddf628049810e9cffb82576e940a216b62ecc52eeae943f707cc73000e2d53@ec2-54-83-50-145.compute-1.amazonaws.com:5432/d79uk8s0d0qu1g")
# DATABASES['default'] = dj_database_url.config(default='HEROKU_POSTGRESQL_IVORY_URL')
# SESSION_ENGINE = 'mongoengine.django.sessions'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators
#
# AUTH_USER_MODEL = 'news_mapper_web.CustomUser'



AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]





# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# DATABASE_URL = os.environ.get('MONGODB_URI')

# DATABASES['default'].update(dj_database_url.config())
# DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'

# GDAL_LIBRARY_PATH = '../gdal202.dll'
# GEOS_LIBRARY_PATH = os.getenv('GEOS_LIBRARY_PATH')

# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'news-mapper-app.herokuapp.com']
# ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
ALLOWED_HOSTS = ['*']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'news_mapper_web/media')


TEMPLATE_DIRS = (os.path.join(BASE_DIR, 'news_mapper_web/templates'),)

LOGIN_URL = 'login'
#comment
# LOGIN_REDIRECT_URL = ''
LOGOUT_REDIRECT_URL = 'index'

GDAL_LIBRARY_PATH = os.getenv('GDAL_LIBRARY_PATH')
GEOS_LIBRARY_PATH = os.getenv('GEOS_LIBRARY_PATH')



django_heroku.settings(locals())
